{"version":3,"file":"index.js","names":["classNames","PropTypes","React","MediaQuery","ChevronLeft","ChevronRight","ArrowBackIos","ArrowForwardIos","greaterThan","Button","Dropdown","IconButton","Icon","breakpoints","newId","ELLIPSIS","getPaginationRange","PAGINATION_BUTTON_LABEL_PREV","PAGINATION_BUTTON_LABEL_NEXT","PAGINATION_BUTTON_LABEL_PAGE","PAGINATION_BUTTON_LABEL_CURRENT_PAGE","PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT","PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT","PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT","VARIANTS","default","secondary","reduced","minimal","ReducedPagination","_ref","currentPage","pageCount","handlePageSelect","createElement","Toggle","variant","id","Menu","className","Array","keys","map","pageNum","Item","onClick","key","Pagination","Component","constructor","props","previousButtonRef","nextButtonRef","pageRefs","state","pageButtonSelected","bind","shouldComponentUpdate","nextProps","nextState","componentDidUpdate","prevProps","prevState","currentPageRef","focus","setPageButtonSelectedState","setState","page","onPageSelect","handlePreviousNextButtonClick","value","renderEllipsisButton","renderPageButton","buttonLabels","active","ariaLabel","ref","element","toString","renderPageOfCountButton","pageOfCount","label","renderPreviousButton","icons","size","isFirstPage","isDisabled","previousPage","iconSize","previous","disabled","tabIndex","undefined","leftIcon","src","iconAs","alt","renderNextButton","isLastPage","nextPage","next","rightIcon","renderScreenReaderSection","description","renderPageButtons","maxPagesDisplayed","pages","currentIndex","count","length","requireFirstAndLastPages","pageIndex","renderReducedPagination","renderMinimalPaginations","render","invertColors","paginationLabel","maxWidth","extraSmall","minWidth","small","propTypes","func","isRequired","number","string","shape","node","oneOf","bool","defaultProps","Reduced"],"sources":["../../src/Pagination/index.jsx"],"sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport MediaQuery from 'react-responsive';\n\nimport {\n  ChevronLeft, ChevronRight, ArrowBackIos, ArrowForwardIos,\n} from '../../icons';\nimport { greaterThan } from '../utils/propTypes';\nimport Button from '../Button';\nimport Dropdown from '../Dropdown';\nimport IconButton from '../IconButton';\nimport Icon from '../Icon';\nimport breakpoints from '../utils/breakpoints';\nimport newId from '../utils/newId';\nimport { ELLIPSIS } from './constants';\nimport getPaginationRange from './getPaginationRange';\n\nexport const PAGINATION_BUTTON_LABEL_PREV = 'Previous';\nexport const PAGINATION_BUTTON_LABEL_NEXT = 'Next';\nexport const PAGINATION_BUTTON_LABEL_PAGE = 'Page';\nexport const PAGINATION_BUTTON_LABEL_CURRENT_PAGE = 'Current Page';\nexport const PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT = 'of';\nexport const PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT = 'Go to next page';\nexport const PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT = 'Go to previous page';\n\nconst VARIANTS = {\n  default: 'default',\n  secondary: 'secondary',\n  reduced: 'reduced',\n  minimal: 'minimal',\n};\n\nfunction ReducedPagination({ currentPage, pageCount, handlePageSelect }) {\n  if (pageCount <= 1) { return null; }\n  return (\n    <Dropdown>\n      <Dropdown.Toggle variant=\"tertiary\" id=\"Pagination dropdown\">\n        {currentPage} of {pageCount}\n      </Dropdown.Toggle>\n      <Dropdown.Menu className=\"pgn__reduced-pagination-dropdown\">\n        {[...Array(pageCount).keys()].map(pageNum => (\n          <Dropdown.Item onClick={() => handlePageSelect(pageNum + 1)} key={pageNum}>\n            {pageNum + 1}\n          </Dropdown.Item>\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n}\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.previousButtonRef = null;\n    this.nextButtonRef = null;\n\n    this.pageRefs = {};\n\n    this.state = {\n      currentPage: this.props.currentPage,\n      pageButtonSelected: false,\n    };\n\n    this.handlePageSelect = this.handlePageSelect.bind(this);\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    // Update only when the props and currentPage state changes to avoid re-render\n    // if only the pageButtonSelected state is changed.\n    return nextProps !== this.props || nextState.currentPage !== this.state.currentPage;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { currentPage, pageButtonSelected } = this.state;\n    const currentPageRef = this.pageRefs[currentPage];\n\n    if (currentPageRef && pageButtonSelected) {\n      currentPageRef.focus();\n      this.setPageButtonSelectedState(false);\n    }\n    /* eslint-disable react/no-did-update-set-state */\n    if (\n      this.state.currentPage === prevState.currentPage\n      && (this.props.currentPage !== prevProps.currentPage\n      || this.props.currentPage !== this.state.currentPage)\n    ) {\n      this.setState({\n        currentPage: this.props.currentPage,\n      });\n    }\n  }\n\n  handlePageSelect(page) {\n    if (page !== this.state.currentPage) {\n      this.setState({\n        currentPage: page,\n        pageButtonSelected: true,\n      });\n      this.props.onPageSelect(page);\n    }\n  }\n\n  handlePreviousNextButtonClick(page) {\n    const { pageCount } = this.props;\n\n    if (page === 1) {\n      this.nextButtonRef.focus();\n    } else if (page === pageCount) {\n      this.previousButtonRef.focus();\n    }\n    this.setState({ currentPage: page });\n    this.props.onPageSelect(page);\n  }\n\n  setPageButtonSelectedState(value) {\n    this.setState({ pageButtonSelected: value });\n  }\n\n  renderEllipsisButton() {\n    return (\n      <li\n        className={classNames(['page-item', 'disabled'])}\n        key={newId('pagination-ellipsis-')}\n      >\n        <span\n          className={classNames([\n            'btn',\n            'page-link',\n            'ml-0',\n            'border-0',\n          ])}\n        >\n          ...\n        </span>\n      </li>\n    );\n  }\n\n  renderPageButton(page) {\n    const { buttonLabels } = this.props;\n    const active = page === this.state.currentPage || null;\n\n    let ariaLabel = `${buttonLabels.page} ${page}`;\n    if (active) {\n      ariaLabel += `, ${buttonLabels.currentPage}`;\n    }\n\n    return (\n      <li\n        className={classNames([\n          'page-item',\n          {\n            active,\n          },\n        ])}\n        key={page}\n      >\n        <Button\n          className=\"page-link\"\n          aria-label={ariaLabel}\n          ref={(element) => { this.pageRefs[page] = element; }}\n          onClick={() => { this.handlePageSelect(page); }}\n        >\n          {page.toString()}\n        </Button>\n      </li>\n    );\n  }\n\n  renderPageOfCountButton() {\n    const { currentPage } = this.state;\n    const { pageCount, buttonLabels } = this.props;\n\n    const ariaLabel = `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n\n    const label = (\n      <span>\n        {`${currentPage} `}\n        {buttonLabels.pageOfCount}\n        {` ${pageCount}`}\n      </span>\n    );\n\n    return (\n      <li\n        className={classNames(['page-item', 'disabled'])}\n        key={currentPage}\n      >\n        <span\n          className={classNames([\n            'btn',\n            'page-link',\n            'mx-2',\n            'border-0',\n          ])}\n          aria-label={ariaLabel}\n        >\n          {label}\n        </span>\n      </li>\n    );\n  }\n\n  renderPreviousButton() {\n    const {\n      buttonLabels, icons, variant, size, pageCount,\n    } = this.props;\n    const { currentPage } = this.state;\n    const isFirstPage = currentPage === 1;\n    const isDisabled = isFirstPage || pageCount === 0;\n    const previousPage = isFirstPage ? null : currentPage - 1;\n    const iconSize = (variant !== VARIANTS.reduced && size !== 'small') || variant === VARIANTS.minimal;\n\n    let ariaLabel = `${buttonLabels.previous}`;\n    if (previousPage) {\n      ariaLabel += `, ${buttonLabels.page} ${previousPage}`;\n    }\n\n    return (\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isDisabled,\n          },\n        )}\n      >\n        {\n          variant === VARIANTS.default\n            ? (\n              <Button\n                className=\"previous page-link\"\n                aria-label={ariaLabel}\n                tabIndex={isDisabled ? '-1' : undefined}\n                onClick={() => { this.handlePreviousNextButtonClick(previousPage); }}\n                ref={(element) => { this.previousButtonRef = element; }}\n                disabled={isDisabled}\n              >\n                <div>\n                  {icons.leftIcon}\n                  {variant === VARIANTS.default ? buttonLabels.previous : null}\n                </div>\n              </Button>\n            )\n            : (\n              <IconButton\n                src={iconSize ? ArrowBackIos : ChevronLeft}\n                iconAs={Icon}\n                className=\"previous page-link\"\n                aria-label={ariaLabel}\n                tabIndex={isDisabled ? '-1' : undefined}\n                onClick={() => { this.handlePreviousNextButtonClick(previousPage); }}\n                ref={(element) => { this.previousButtonRef = element; }}\n                disabled={isDisabled}\n                alt={PAGINATION_BUTTON_ICON_BUTTON_PREV_ALT}\n              />\n            )\n        }\n      </li>\n    );\n  }\n\n  renderNextButton() {\n    const {\n      buttonLabels, pageCount, icons, variant, size,\n    } = this.props;\n    const { currentPage } = this.state;\n    const isLastPage = (currentPage === pageCount);\n    const isDisabled = isLastPage || (pageCount <= 1);\n    const nextPage = isLastPage ? null : currentPage + 1;\n    const iconSize = (variant !== VARIANTS.reduced && size !== 'small') || variant === VARIANTS.minimal;\n\n    let ariaLabel = `${buttonLabels.next}`;\n    if (nextPage) {\n      ariaLabel += `, ${buttonLabels.page} ${nextPage}`;\n    }\n\n    return (\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: isDisabled,\n          },\n        )}\n      >\n        {variant === VARIANTS.default ? (\n          <Button\n            className=\"next page-link\"\n            aria-label={ariaLabel}\n            tabIndex={isDisabled ? '-1' : undefined}\n            onClick={() => { this.handlePreviousNextButtonClick(nextPage); }}\n            ref={(element) => { this.nextButtonRef = element; }}\n            disabled={isDisabled}\n          >\n            <div>\n              {variant === VARIANTS.default ? buttonLabels.next : null}\n              {icons.rightIcon}\n            </div>\n          </Button>\n        ) : (\n          <IconButton\n            src={iconSize ? ArrowForwardIos : ChevronRight}\n            iconAs={Icon}\n            className=\"next page-link\"\n            aria-label={ariaLabel}\n            tabIndex={isDisabled ? '-1' : undefined}\n            onClick={() => { this.handlePreviousNextButtonClick(nextPage); }}\n            ref={(element) => { this.nextButtonRef = element; }}\n            disabled={isDisabled}\n            alt={PAGINATION_BUTTON_ICON_BUTTON_NEXT_ALT}\n          />\n        )}\n      </li>\n    );\n  }\n\n  renderScreenReaderSection() {\n    const { currentPage } = this.state;\n    const { buttonLabels, pageCount } = this.props;\n\n    const description = `${buttonLabels.page} ${currentPage}, ${buttonLabels.currentPage}, ${buttonLabels.pageOfCount} ${pageCount}`;\n\n    return (\n      <div\n        className=\"sr-only\"\n        aria-live=\"polite\"\n        aria-relevant=\"text\"\n        aria-atomic\n      >\n        {description}\n      </div>\n    );\n  }\n\n  renderPageButtons() {\n    const { currentPage } = this.state;\n    const { pageCount, maxPagesDisplayed } = this.props;\n\n    const pages = getPaginationRange({\n      currentIndex: currentPage,\n      count: pageCount,\n      length: maxPagesDisplayed,\n      requireFirstAndLastPages: true,\n    });\n\n    if (pageCount <= 1) {\n      return null;\n    }\n    return pages.map((pageIndex) => {\n      if (pageIndex === ELLIPSIS) {\n        return this.renderEllipsisButton();\n      }\n      return this.renderPageButton(pageIndex + 1);\n    });\n  }\n\n  renderReducedPagination() {\n    const { currentPage } = this.state;\n    const { pageCount } = this.props;\n\n    return (\n      <ul className=\"pagination\">\n        {this.renderPreviousButton()}\n        <ReducedPagination currentPage={currentPage} pageCount={pageCount} handlePageSelect={this.handlePageSelect} />\n        {this.renderNextButton()}\n      </ul>\n    );\n  }\n\n  renderMinimalPaginations() {\n    return (\n      <ul className=\"pagination\">\n        {this.renderPreviousButton()}\n        {this.renderNextButton()}\n      </ul>\n    );\n  }\n\n  render() {\n    const { variant, invertColors, size } = this.props;\n    return (\n      <nav\n        aria-label={this.props.paginationLabel}\n        className={classNames(this.props.className, {\n          [`pagination-${variant}`]: variant,\n          'pagination-inverse': invertColors,\n          'pagination-small': size !== VARIANTS.default,\n        })}\n      >\n        {this.renderScreenReaderSection()}\n        {variant === VARIANTS.default || variant === VARIANTS.secondary\n          ? (\n            <ul className=\"pagination\">\n              {this.renderPreviousButton()}\n              <MediaQuery maxWidth={breakpoints.extraSmall.maxWidth}>\n                {this.renderPageOfCountButton()}\n              </MediaQuery>\n              <MediaQuery minWidth={breakpoints.small.minWidth}>\n                {this.renderPageButtons()}\n              </MediaQuery>\n              {this.renderNextButton()}\n            </ul>\n          )\n          : null}\n        {variant === VARIANTS.reduced ? this.renderReducedPagination() : null}\n        {variant === VARIANTS.minimal ? this.renderMinimalPaginations() : null}\n      </nav>\n    );\n  }\n}\n\nPagination.propTypes = {\n  /**\n   * Specifies a callback function that is executed when the\n   * user selects a page button or the `Previous`/`Next` buttons. For example:\n   *\n   * ```jsx\n   *  <Pagination onPageSelect={(pageNumber) => { console.log(pageNumber); } />\n   * ```\n   */\n  onPageSelect: PropTypes.func.isRequired,\n  /** Specifies the total number of pages in the `Pagination` component. */\n  pageCount: PropTypes.number.isRequired,\n  /** Specifies the `aria-label` for the `<nav>` element that wraps the pagination button list. */\n  paginationLabel: PropTypes.string.isRequired,\n  /**\n   * Specifies the labels to use for the `Previous`/`Next`\n   * buttons as well as the various parts of `aria-label`\n   * on the page buttons for accessibility. All button labels\n   * accept both string or elements. The button label options are as follows:\n   *\n   * `previous`: Text for the `Previous` button;\n   *\n   * `next`: Text for the `Next` button;\n   *\n   * `page`: Text in the `aria-label` on page buttons to describe the button (e.g., \"**Page** 1\");\n   *\n   * `currentPage`: Text to depict the selected page in the `aria-label`\n   * on page buttons (e.g., \"Page 1, **Current Page**\");\n   *\n   * `pageOfCount`: Text that separates the current page and total page count\n   * for the mobile UI (e.g., \"Page 1 **of** 20\").\n   *\n   * The default is:\n   * ```javascript\n   * {\n   *   previous: 'Previous',\n   *   next: 'Next',\n   *   page: 'Page',\n   *   currentPage: 'Current Page',\n   *   pageOfCount: 'of',\n   * }\n   * ```\n   */\n  buttonLabels: PropTypes.shape({\n    previous: PropTypes.string,\n    next: PropTypes.string,\n    page: PropTypes.string,\n    currentPage: PropTypes.string,\n    pageOfCount: PropTypes.string,\n  }),\n  /** Specifies any class name(s) for the `Pagination` component. The default is an empty string. */\n  className: PropTypes.string,\n  /** specifies the page that the `Pagination` component will automatically select. The default is `1`. */\n  currentPage: PropTypes.number,\n  /**\n   * Specifies the number of page buttons to display in between the `Previous`\n   * and `Next` buttons. This number also includes any ellipses in the total count.\n   * Also, to ensure that at least one clickable page button is shown when both ellipses\n   * are displayed, this value must be greater than `4`. The default is `7`.\n   */\n  maxPagesDisplayed: greaterThan(4),\n  /**\n   * Specifies icons used to indicate previous and next page. Can be an element,\n   * string, symbol, etc. Default is chevrons rendered using fa-css.\n   */\n  icons: PropTypes.shape({\n    leftIcon: PropTypes.node,\n    rightIcon: PropTypes.node,\n  }),\n  variant: PropTypes.oneOf(['default', 'secondary', 'reduced', 'minimal']),\n  invertColors: PropTypes.bool,\n  size: PropTypes.oneOf(['default', 'small']),\n};\n\nPagination.defaultProps = {\n  icons: {\n    leftIcon: <Icon src={ChevronLeft} />,\n    rightIcon: <Icon src={ChevronRight} />,\n  },\n  buttonLabels: {\n    previous: PAGINATION_BUTTON_LABEL_PREV,\n    next: PAGINATION_BUTTON_LABEL_NEXT,\n    page: PAGINATION_BUTTON_LABEL_PAGE,\n    currentPage: PAGINATION_BUTTON_LABEL_CURRENT_PAGE,\n    pageOfCount: PAGINATION_BUTTON_LABEL_PAGE_OF_COUNT,\n  },\n  className: undefined,\n  currentPage: 1,\n  maxPagesDisplayed: 7,\n  variant: 'default',\n  invertColors: false,\n  size: 'default',\n};\n\nReducedPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  pageCount: PropTypes.number.isRequired,\n  handlePageSelect: PropTypes.func.isRequired,\n};\n\nPagination.Reduced = ReducedPagination;\n\nexport default Pagination;\n"],"mappings":"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"}