{"version":3,"file":"FormControlFeedback.js","names":["React","PropTypes","classNames","useFormGroupContext","FormText","resolveTextType","FormControlFeedback","_ref","children","props","_objectWithoutProperties","_excluded","getDescriptorProps","isInvalid","isValid","descriptorProps","className","textType","type","createElement","_extends","FEEDBACK_TYPES","propTypes","node","isRequired","string","hasIcon","bool","oneOf","icon","muted","defaultProps","undefined"],"sources":["../../src/Form/FormControlFeedback.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useFormGroupContext } from './FormGroupContext';\nimport FormText, { resolveTextType } from './FormText';\n\nfunction FormControlFeedback({ children, ...props }) {\n  const { getDescriptorProps, isInvalid, isValid } = useFormGroupContext();\n  const descriptorProps = getDescriptorProps(props);\n  const className = classNames('pgn__form-control-description', props.className);\n  const textType = props.type || resolveTextType({ isInvalid, isValid });\n  return (\n    <FormText\n      {...descriptorProps}\n      className={className}\n      type={textType}\n    >\n      {children}\n    </FormText>\n  );\n}\n\nconst FEEDBACK_TYPES = [\n  'default',\n  'valid',\n  'invalid',\n  'warning',\n  'criteria-empty',\n  'criteria-valid',\n  'criteria-invalid',\n];\n\nFormControlFeedback.propTypes = {\n  /** Specifies contents of the component. */\n  children: PropTypes.node.isRequired,\n  /** Specifies class name to append to the base element. */\n  className: PropTypes.string,\n  /** Specifies whether to show an icon next to the text. */\n  hasIcon: PropTypes.bool,\n  /** Specifies feedback type, this affects styling. */\n  type: PropTypes.oneOf(FEEDBACK_TYPES),\n  /** Specifies icon to show, will only be shown if `hasIcon` prop is set to `true`. */\n  icon: PropTypes.node,\n  /** Specifies whether to show feedback with muted styling. */\n  muted: PropTypes.bool,\n};\n\nFormControlFeedback.defaultProps = {\n  hasIcon: true,\n  type: undefined,\n  icon: undefined,\n  className: undefined,\n  muted: false,\n};\n\nexport default FormControlFeedback;\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,UAAU,MAAM,YAAY;AACnC,SAASC,mBAAmB,QAAQ,oBAAoB;AACxD,OAAOC,QAAQ,IAAIC,eAAe,QAAQ,YAAY;AAEtD,SAASC,mBAAmBA,CAAAC,IAAA,EAAyB;EAAA,IAAxB;MAAEC;IAAmB,CAAC,GAAAD,IAAA;IAAPE,KAAK,GAAAC,wBAAA,CAAAH,IAAA,EAAAI,SAAA;EAC/C,MAAM;IAAEC,kBAAkB;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAGX,mBAAmB,EAAE;EACxE,MAAMY,eAAe,GAAGH,kBAAkB,CAACH,KAAK,CAAC;EACjD,MAAMO,SAAS,GAAGd,UAAU,CAAC,+BAA+B,EAAEO,KAAK,CAACO,SAAS,CAAC;EAC9E,MAAMC,QAAQ,GAAGR,KAAK,CAACS,IAAI,IAAIb,eAAe,CAAC;IAAEQ,SAAS;IAAEC;EAAQ,CAAC,CAAC;EACtE,oBACEd,KAAA,CAAAmB,aAAA,CAACf,QAAQ,EAAAgB,QAAA,KACHL,eAAe;IACnBC,SAAS,EAAEA,SAAU;IACrBE,IAAI,EAAED;EAAS,IAEdT,QAAQ,CACA;AAEf;AAEA,MAAMa,cAAc,GAAG,CACrB,SAAS,EACT,OAAO,EACP,SAAS,EACT,SAAS,EACT,gBAAgB,EAChB,gBAAgB,EAChB,kBAAkB,CACnB;AAEDf,mBAAmB,CAACgB,SAAS,GAAG;EAC9B;EACAd,QAAQ,EAAEP,SAAS,CAACsB,IAAI,CAACC,UAAU;EACnC;EACAR,SAAS,EAAEf,SAAS,CAACwB,MAAM;EAC3B;EACAC,OAAO,EAAEzB,SAAS,CAAC0B,IAAI;EACvB;EACAT,IAAI,EAAEjB,SAAS,CAAC2B,KAAK,CAACP,cAAc,CAAC;EACrC;EACAQ,IAAI,EAAE5B,SAAS,CAACsB,IAAI;EACpB;EACAO,KAAK,EAAE7B,SAAS,CAAC0B;AACnB,CAAC;AAEDrB,mBAAmB,CAACyB,YAAY,GAAG;EACjCL,OAAO,EAAE,IAAI;EACbR,IAAI,EAAEc,SAAS;EACfH,IAAI,EAAEG,SAAS;EACfhB,SAAS,EAAEgB,SAAS;EACpBF,KAAK,EAAE;AACT,CAAC;AAED,eAAexB,mBAAmB"}