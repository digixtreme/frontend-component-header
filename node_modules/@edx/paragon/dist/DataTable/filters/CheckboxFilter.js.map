{"version":3,"file":"CheckboxFilter.js","names":["React","useRef","useMemo","PropTypes","Form","FormLabel","Badge","newId","LabelledCheckbox","CheckboxFilter","_ref","column","filterValue","setFilter","Header","filterChoices","getHeaderProps","ariaLabel","key","checkedBoxes","changeCheckbox","value","includes","newCheckedBoxes","filter","val","push","headerBasedId","createElement","Group","role","current","id","className","map","_ref2","name","number","checked","onChange","label","Fragment","undefined","variant","propTypes","shape","func","isRequired","oneOfType","node","arrayOf","string"],"sources":["../../../src/DataTable/filters/CheckboxFilter.jsx"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Form, { FormLabel } from '../../Form';\nimport Badge from '../../Badge';\nimport { newId } from '../../utils';\nimport LabelledCheckbox from './LabelledCheckbox';\n\nfunction CheckboxFilter({\n  column: {\n    filterValue, setFilter, Header, filterChoices, getHeaderProps,\n  },\n}) {\n  // creates a unique label that does not change on re-render in case there are multiple checkbox filters in the dom\n  const ariaLabel = useRef(newId(`checkbox-filter-label-${getHeaderProps().key}-`));\n\n  const checkedBoxes = filterValue || [];\n  const changeCheckbox = (value) => {\n    if (checkedBoxes.includes(value)) {\n      const newCheckedBoxes = checkedBoxes.filter((val) => val !== value);\n      return setFilter(newCheckedBoxes);\n    }\n    checkedBoxes.push(value);\n    return setFilter(checkedBoxes);\n  };\n  const headerBasedId = useMemo(() => `checkbox-filter-check-${getHeaderProps().key}-`, [getHeaderProps]);\n\n  return (\n    <Form.Group role=\"group\" aria-labelledby={ariaLabel.current}>\n      <FormLabel id={ariaLabel.current} className=\"pgn__checkbox-filter-label\">{Header}</FormLabel>\n      {filterChoices.map(({ name, number, value }) => (\n        <LabelledCheckbox\n          id={headerBasedId}\n          key={headerBasedId + name}\n          checked={checkedBoxes.includes(value)}\n          onChange={() => { changeCheckbox(value); }}\n          label={<>{name} {number !== undefined && <Badge variant=\"light\">{number}</Badge>}</>}\n        />\n      ))}\n    </Form.Group>\n  );\n}\n\nCheckboxFilter.propTypes = {\n  /**\n   * Specifies a column object.\n   *\n   * `setFilter`: Function to set the filter value.\n   *\n   * `Header`: Column header used for labels and placeholders.\n   *\n   * `filterChoices`: Specifies array of choices.\n   *\n   * `getHeaderProps`: Generates a key unique to the column being filtered.\n   *\n   * `filterValue`: Value for the filter input.\n   */\n  column: PropTypes.shape({\n    setFilter: PropTypes.func.isRequired,\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      number: PropTypes.number,\n    })).isRequired,\n    getHeaderProps: PropTypes.func.isRequired,\n    filterValue: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default CheckboxFilter;\n"],"mappings":"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"}