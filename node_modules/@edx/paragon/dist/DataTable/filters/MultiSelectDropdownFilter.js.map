{"version":3,"file":"MultiSelectDropdownFilter.js","names":["React","useRef","useMemo","PropTypes","Badge","DropdownButton","newId","LabelledCheckbox","MultiSelectDropdownFilter","_ref","column","setFilter","Header","filterChoices","getHeaderProps","filterValue","ariaLabel","key","checkedBoxes","changeCheckbox","value","includes","newCheckedBoxes","filter","val","push","headerBasedId","createElement","variant","id","current","title","role","className","map","_ref2","name","number","checked","onChange","label","Fragment","propTypes","shape","func","isRequired","oneOfType","node","arrayOf","string"],"sources":["../../../src/DataTable/filters/MultiSelectDropdownFilter.jsx"],"sourcesContent":["import React, { useRef, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport Badge from '../../Badge';\nimport { DropdownButton } from '../../Dropdown';\nimport { newId } from '../../utils';\nimport LabelledCheckbox from './LabelledCheckbox';\n\nfunction MultiSelectDropdownFilter({\n  column: {\n    setFilter, Header, filterChoices, getHeaderProps, filterValue,\n  },\n}) {\n  // creates a unique label that does not change on re-render in case there are multiple checkbox filters in the dom\n  const ariaLabel = useRef(newId(`multi-dropdown-filter-label-${getHeaderProps().key}-`));\n  const checkedBoxes = filterValue || [];\n  const changeCheckbox = (value) => {\n    if (checkedBoxes.includes(value)) {\n      const newCheckedBoxes = checkedBoxes.filter((val) => val !== value);\n      return setFilter(newCheckedBoxes);\n    }\n    checkedBoxes.push(value);\n    return setFilter(checkedBoxes);\n  };\n  const headerBasedId = useMemo(() => `checkbox-filter-check-${getHeaderProps().key}-`, [getHeaderProps]);\n  return (\n    <DropdownButton variant=\"outline-primary\" id={ariaLabel.current} title={Header}>\n      <div role=\"group\" aria-label={Header} className=\"pgn__dropdown-filter-checkbox-group\">\n        {filterChoices.map(({ name, number, value }) => (\n          <LabelledCheckbox\n            key={name}\n            id={headerBasedId}\n            checked={checkedBoxes.includes(value)}\n            onChange={() => { changeCheckbox(value); }}\n            label={<>{name} {number && <Badge variant=\"light\">{number}</Badge>}</>}\n          />\n        ))}\n      </div>\n    </DropdownButton>\n  );\n}\n\nMultiSelectDropdownFilter.propTypes = {\n  /**\n   * Specifies a column object.\n   *\n   * `setFilter`: Function to set the filter value.\n   *\n   * `Header`: Column header used for labels and placeholders.\n   *\n   * `filterChoices`: Specifies array of choices.\n   *\n   * `getHeaderProps`: Generates a key unique to the column being filtered.\n   *\n   * `filterValue`: Value for the filter input.\n   */\n  column: PropTypes.shape({\n    /** Function to set the filter value */\n    setFilter: PropTypes.func.isRequired,\n    /** Column header used for labels and placeholders */\n    Header: PropTypes.oneOfType([PropTypes.func, PropTypes.node]).isRequired,\n    /** Names and values for the select options */\n    filterChoices: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number,\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    })).isRequired,\n    /** Generates a key unique to the column being filtered */\n    getHeaderProps: PropTypes.func.isRequired,\n    filterValue: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n};\n\nexport default MultiSelectDropdownFilter;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,OAAO,QAAQ,OAAO;AAC9C,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,aAAa;AAC/B,SAASC,cAAc,QAAQ,gBAAgB;AAC/C,SAASC,KAAK,QAAQ,aAAa;AACnC,OAAOC,gBAAgB,MAAM,oBAAoB;AAEjD,SAASC,yBAAyBA,CAAAC,IAAA,EAI/B;EAAA,IAJgC;IACjCC,MAAM,EAAE;MACNC,SAAS;MAAEC,MAAM;MAAEC,aAAa;MAAEC,cAAc;MAAEC;IACpD;EACF,CAAC,GAAAN,IAAA;EACC;EACA,MAAMO,SAAS,GAAGf,MAAM,CAACK,KAAK,CAAE,+BAA8BQ,cAAc,EAAE,CAACG,GAAI,GAAE,CAAC,CAAC;EACvF,MAAMC,YAAY,GAAGH,WAAW,IAAI,EAAE;EACtC,MAAMI,cAAc,GAAIC,KAAK,IAAK;IAChC,IAAIF,YAAY,CAACG,QAAQ,CAACD,KAAK,CAAC,EAAE;MAChC,MAAME,eAAe,GAAGJ,YAAY,CAACK,MAAM,CAAEC,GAAG,IAAKA,GAAG,KAAKJ,KAAK,CAAC;MACnE,OAAOT,SAAS,CAACW,eAAe,CAAC;IACnC;IACAJ,YAAY,CAACO,IAAI,CAACL,KAAK,CAAC;IACxB,OAAOT,SAAS,CAACO,YAAY,CAAC;EAChC,CAAC;EACD,MAAMQ,aAAa,GAAGxB,OAAO,CAAC,MAAO,yBAAwBY,cAAc,EAAE,CAACG,GAAI,GAAE,EAAE,CAACH,cAAc,CAAC,CAAC;EACvG,oBACEd,KAAA,CAAA2B,aAAA,CAACtB,cAAc;IAACuB,OAAO,EAAC,iBAAiB;IAACC,EAAE,EAAEb,SAAS,CAACc,OAAQ;IAACC,KAAK,EAAEnB;EAAO,gBAC7EZ,KAAA,CAAA2B,aAAA;IAAKK,IAAI,EAAC,OAAO;IAAC,cAAYpB,MAAO;IAACqB,SAAS,EAAC;EAAqC,GAClFpB,aAAa,CAACqB,GAAG,CAACC,KAAA;IAAA,IAAC;MAAEC,IAAI;MAAEC,MAAM;MAAEjB;IAAM,CAAC,GAAAe,KAAA;IAAA,oBACzCnC,KAAA,CAAA2B,aAAA,CAACpB,gBAAgB;MACfU,GAAG,EAAEmB,IAAK;MACVP,EAAE,EAAEH,aAAc;MAClBY,OAAO,EAAEpB,YAAY,CAACG,QAAQ,CAACD,KAAK,CAAE;MACtCmB,QAAQ,EAAEA,CAAA,KAAM;QAAEpB,cAAc,CAACC,KAAK,CAAC;MAAE,CAAE;MAC3CoB,KAAK,eAAExC,KAAA,CAAA2B,aAAA,CAAA3B,KAAA,CAAAyC,QAAA,QAAGL,IAAI,EAAC,GAAC,EAACC,MAAM,iBAAIrC,KAAA,CAAA2B,aAAA,CAACvB,KAAK;QAACwB,OAAO,EAAC;MAAO,GAAES,MAAM,CAAS;IAAK,EACvE;EAAA,CACH,CAAC,CACE,CACS;AAErB;AAEA7B,yBAAyB,CAACkC,SAAS,GAAG;EACpC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACEhC,MAAM,EAAEP,SAAS,CAACwC,KAAK,CAAC;IACtB;IACAhC,SAAS,EAAER,SAAS,CAACyC,IAAI,CAACC,UAAU;IACpC;IACAjC,MAAM,EAAET,SAAS,CAAC2C,SAAS,CAAC,CAAC3C,SAAS,CAACyC,IAAI,EAAEzC,SAAS,CAAC4C,IAAI,CAAC,CAAC,CAACF,UAAU;IACxE;IACAhC,aAAa,EAAEV,SAAS,CAAC6C,OAAO,CAAC7C,SAAS,CAACwC,KAAK,CAAC;MAC/CP,IAAI,EAAEjC,SAAS,CAAC8C,MAAM,CAACJ,UAAU;MACjCR,MAAM,EAAElC,SAAS,CAACkC,MAAM;MACxBjB,KAAK,EAAEjB,SAAS,CAAC2C,SAAS,CAAC,CAAC3C,SAAS,CAAC8C,MAAM,EAAE9C,SAAS,CAACkC,MAAM,CAAC,CAAC,CAACQ;IACnE,CAAC,CAAC,CAAC,CAACA,UAAU;IACd;IACA/B,cAAc,EAAEX,SAAS,CAACyC,IAAI,CAACC,UAAU;IACzC9B,WAAW,EAAEZ,SAAS,CAAC6C,OAAO,CAAC7C,SAAS,CAAC8C,MAAM;EACjD,CAAC,CAAC,CAACJ;AACL,CAAC;AAED,eAAerC,yBAAyB"}