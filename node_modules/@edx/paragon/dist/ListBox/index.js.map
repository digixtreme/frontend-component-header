{"version":3,"file":"index.js","names":["classNames","PropTypes","React","nonNegativeInteger","ListBox","Component","constructor","props","onFocus","bind","onKeyDown","state","selectedOptionIndex","getDerivedStateFromProps","nextProps","prevState","undefined","setState","e","key","preventDefault","Children","count","children","renderChildren","map","child","index","cloneElement","isSelected","onSelect","render","_this$props","className","tag","other","_objectWithoutProperties","_excluded","createElement","_objectSpread","role","tabIndex","propTypes","node","isRequired","string","defaultProps"],"sources":["../../src/ListBox/index.jsx"],"sourcesContent":["/* eslint-disable max-len */\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { nonNegativeInteger } from '../utils/propTypes';\n\nexport default class ListBox extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onFocus = this.onFocus.bind(this);\n    this.onKeyDown = this.onKeyDown.bind(this);\n\n    this.state = {\n      selectedOptionIndex: null,\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { selectedOptionIndex } = nextProps;\n\n    if (selectedOptionIndex !== prevState.selectedOptionIndex\n      && selectedOptionIndex !== undefined) {\n      return { selectedOptionIndex };\n    }\n\n    return null;\n  }\n\n  onFocus() {\n    // if no ListBoxOption is selected, select first ListBoxOption on ListBox focus\n    if (!this.state.selectedOptionIndex) {\n      this.setState({\n        selectedOptionIndex: 0,\n      });\n    }\n  }\n\n  onKeyDown(e) {\n    switch (e.key) {\n      case 'ArrowDown': {\n        // prevent scrolling entire modal body with arrow keys\n        e.preventDefault();\n        if (this.state.selectedOptionIndex < React.Children.count(this.props.children) - 1) {\n          this.setState(state => ({\n            selectedOptionIndex: state.selectedOptionIndex + 1,\n          }));\n        }\n        break;\n      }\n      case 'ArrowUp': {\n        // prevent scrolling entire modal body with arrow keys\n        e.preventDefault();\n\n        if (this.state.selectedOptionIndex > 0) {\n          this.setState(state => ({\n            selectedOptionIndex: state.selectedOptionIndex - 1,\n          }));\n        }\n        break;\n      }\n      default:\n    }\n  }\n\n  renderChildren() {\n    return React.Children.map(this.props.children, (child, index) => React.cloneElement(child, {\n      index,\n      isSelected: index === this.state.selectedOptionIndex,\n      onSelect: () => { this.setState({ selectedOptionIndex: index }); child.props.onSelect(); },\n    }));\n  }\n\n  render() {\n    const {\n      children,\n      className,\n      selectedOptionIndex,\n      tag,\n      ...other\n    } = this.props;\n\n    return React.createElement(\n      this.props.tag,\n      {\n        'aria-activedescendant': this.state.selectedOptionIndex === null ? null : `list-box-option-${this.state.selectedOptionIndex}`,\n        className: classNames(['list-group', this.props.className]),\n        onFocus: this.onFocus,\n        onKeyDown: this.onKeyDown,\n        role: 'listbox',\n        tabIndex: 0,\n        ...other,\n      },\n      this.renderChildren(),\n    );\n  }\n}\n\nListBox.propTypes = {\n  /** specifies the ListBoxOption component(s) that will be displayed within the ListBox element. You can pass in one or more ListBoxOption components.\n */\n  children: PropTypes.node.isRequired,\n  /** specifies Bootstrap class names to apply to the ListBox component. The default is an empty string. */\n  className: PropTypes.string,\n  /** Although the ListBox component keeps track of which ListBoxOption is selected, `selectedOptionIndex` provides a mechanism for an override, if necessary. An example would be to clear the selectedOption when moving between views. Note that override is not permanent and that clicking on a ListBoxOption or interacting with the ListBox with the keyboard will change the selected ListBoxOption relative to the original override. The default is undefined. */\n  selectedOptionIndex: nonNegativeInteger,\n  /** used to specify the element type of the rendered ListBox component. The default is div. Example alternatives include ol, ul, span, etc. */\n  tag: PropTypes.string,\n};\n\nListBox.defaultProps = {\n  className: undefined,\n  selectedOptionIndex: undefined,\n  tag: 'div',\n};\n"],"mappings":"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"}