{"version":3,"file":"index.js","names":["React","PropTypes","classNames","Input","FormControl","propTypes","for","string","isRequired","className","invalid","bool","valid","validMessage","node","invalidMessage","helpText","children","defaultProps","undefined","ValidationFormGroup","props","id","renderChildren","Children","map","child","indexOf","type","cloneElement","Boolean","renderHelpText","text","createElement","renderInvalidFeedback","message","renderValidFeedback"],"sources":["../../src/ValidationFormGroup/index.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Input from '../Input';\nimport { FormControl } from '../Form';\n\nconst propTypes = {\n  /** Id of the form input that the validation is for */\n  for: PropTypes.string.isRequired,\n  /** Additional classnames for this component */\n  className: PropTypes.string,\n  /** Determines if invalid styles / message will be shown */\n  invalid: PropTypes.bool,\n  /** Determines if invalid styles / message will be shown */\n  valid: PropTypes.bool,\n  /** Message to display on valid input */\n  validMessage: PropTypes.node,\n  /** Message to display on invalid input */\n  invalidMessage: PropTypes.node,\n  /** Help text for the form input */\n  helpText: PropTypes.node,\n  children: PropTypes.node,\n};\n\nconst defaultProps = {\n  invalid: undefined,\n  valid: undefined,\n  validMessage: undefined,\n  invalidMessage: undefined,\n  helpText: undefined,\n  children: undefined,\n  className: undefined,\n};\n\nfunction ValidationFormGroup(props) {\n  const {\n    className,\n    invalidMessage,\n    invalid,\n    valid,\n    validMessage,\n    helpText,\n    for: id,\n    children,\n  } = props;\n\n  const renderChildren = () => React.Children.map(children, (child) => {\n    // Any non-user input element should pass through unmodified\n    if (['input', 'textarea', 'select', Input, FormControl].indexOf(child.type) === -1) { return child; }\n\n    // Add validation class names and describedby values to input element\n    return React.cloneElement(child, {\n      className: classNames(child.props.className, {\n        'is-invalid': invalid,\n        'is-valid': valid,\n      }),\n      // This is a non-standard use of the classNames package, but it's exactly the same use case.\n      'aria-describedby': classNames(child.props['aria-describedby'], {\n        [`${id}-help-text`]: Boolean(helpText),\n        [`${id}-invalid-feedback`]: invalid && invalidMessage,\n        [`${id}-valid-feedback`]: valid && validMessage,\n      }),\n    });\n  });\n\n  const renderHelpText = (text) => {\n    if (!text) { return null; }\n    return <small id={`${id}-help-text`} className=\"form-text text-muted\">{text}</small>;\n  };\n\n  /**\n   * The red text conveys semantic emphasis using color and font weight. For WCAG 2.1, the\n   * semantics need to be exposed programmatically as well. To do this, we use <strong/>\n   * elements and attach the formatting classes to them.\n   */\n  const renderInvalidFeedback = (message) => {\n    if (!message) { return null; }\n    return (\n      <strong\n        id={`${id}-invalid-feedback`}\n        className=\"invalid-feedback\"\n      >\n        {message}\n      </strong>\n    );\n  };\n\n  const renderValidFeedback = (message) => {\n    if (!message) { return null; }\n    return (\n      <div\n        className=\"valid-feedback\"\n        id={`${id}-valid-feedback`}\n      >\n        {message}\n      </div>\n    );\n  };\n\n  return (\n    <div className={classNames('form-group', className)}>\n      {renderChildren()}\n      {renderHelpText(helpText)}\n      {renderInvalidFeedback(invalidMessage)}\n      {renderValidFeedback(validMessage)}\n    </div>\n  );\n}\n\nValidationFormGroup.propTypes = propTypes;\nValidationFormGroup.defaultProps = defaultProps;\n\nexport default ValidationFormGroup;\n"],"mappings":"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"}